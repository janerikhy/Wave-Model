#!/usr/bin/env python3
import rospy

from std_msgs.msg import Float64MultiArray
from nav_msgs.msg import Odometry
from messages.msg import Observer_state


def odomCallback(msg):
    pass


def tauCallback(msg):
    pass


if __name__ == '__main__':
    vessel_name = "CSAD"
    rospy.init_node(f"{vessel_name}_ekf")
    rospy.loginfo(f"INITIALIZING {vessel_name} EXTENDED KALMAN FILTERS NODE")
    r = rospy.Rate(100)
    dt = 0.01  # Simulation timestep corresponding to sampling frequency of 100 Hz

    # Subscribers

    odom_sub = rospy.Subscriber(
        f"/qualisys/{vessel_name}/odom", Odometry, odomCallback)
    tau_sub = rospy.Subscriber(
        f"/{vessel_name}/tau", Float64MultiArray, tauCallback)

    # Publishers
    obs_pub = rospy.Publisher(
        f"/{vessel_name}/observer_states", Observer_state, queue_size=1)

    # Messages
    obs_msg = Observer_state()

    while not rospy.is_shutdown():

        r.sleep()

    rospy.spin()

#!/usr/bin/env python3
import rospy
from MCSimPython.thrust_allocation.thruster import Thruster
from MCSimPython.thrust_allocation.allocation import fixed_angle_allocator
import MCSimPython.vessel_data.CSAD.thruster_data as data 

from std_msgs.msg import Float64MultiArray



def tauCmdCallback(msg):
    
    tau = msg.data

    


if __name__ == '__main__':
    vessel_name = "CSAD"
    rospy.init_node("thurst_alloc_fixed")
    rospy.loginfo(f"INITIALIZING {vessel_name} THRUST ALLOCATION NODE")
    r = rospy.Rate(100)
    #dt = 0.01  # Simulation timestep corresponding to sampling frequency of 100 Hz

    # Actuators
    allocator = fixed_angle_allocator()

    # Set thruster configuration
    for i in range(6):
        allocator.add_thruster(Thruster((data.lx[i], data.ly[i]), data.K[i]))


    # Subscribers
    tauCmd_sub = rospy.Subscriber(
        f"/{vessel_name}/tau_cmd", Float64MultiArray, tauCmdCallback)

    # Publishers
    u_pub = rospy.Publisher(
        f"/{vessel_name}/u", Float64MultiArray, queue_size=1)
    alpha_pub = rospy.Publisher(
        f"/{vessel_name}/alpha", Float64MultiArray, queue_size=1)

    # Messages

    while not rospy.is_shutdown():

        r.sleep()

    rospy.spin()
    rospy.shutdown()
